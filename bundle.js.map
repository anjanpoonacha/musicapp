{"version":3,"sources":["index.js"],"names":["musicContainer","document","getElementById","playlist","audio","cover","title","prevBtn","shuffleBtn","nextBtn","playBtn","artist","progress","progressContainer","tracks","songIndex","Math","floor","random","getTracks","fetch","json","loadPlaylist","html","newHTML","map","track","htmlString","replace","id","albumCover","join","innerHTML","songHandler","e","songCard","target","closest","loadSong","playSong","song","innerText","src","file","classList","add","querySelector","remove","play","pauseSong","pause","prevSong","length","shuffle","nextSong","updateProgress","srcElement","duration","progressPercent","currentTime","style","width","setProgress","clientWidth","clickX","offsetX","splice","addEventListener","contains","console","log"],"mappings":"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","file":"bundle.js","sourceRoot":"../src","sourcesContent":["const musicContainer = document.getElementById(\"music-container\");\nconst playlist = document.getElementById(\"playlist\");\nconst audio = document.getElementById(\"audio\");\nconst cover = document.getElementById(\"img\");\nconst title = document.getElementById(\"title\");\nconst prevBtn = document.getElementById(\"prev\");\nconst shuffleBtn = document.getElementById(\"shuffle\");\nconst nextBtn = document.getElementById(\"next\");\nconst playBtn = document.getElementById(\"play\");\nconst artist = document.getElementById(\"artist\");\nconst progress = document.getElementById(\"progress\");\nconst progressContainer = document.getElementById(\"progress-container\");\n\nlet tracks = [];\n\n// SONG TRACK\nlet songIndex = Math.floor(Math.random() * 8);\n\nconst getTracks = async () => {\n  const tracks = await (\n    await fetch(\"http://5dd1894f15bbc2001448d28e.mockapi.io/playlist\")\n  ).json();\n  return tracks;\n};\n\nconst loadPlaylist = tracks => {\n  let html = `<div class=\"card\" id=\"%ID%\">\n                <img class=\"card__img\" src=\"%COVER%\" alt=\"Albumn Art\" />\n                <h3 class=\"card__artist\">%ARTIST%</h3>\n                <p class=\"card__track-name\">%TRACK%</p>\n              </div>`;\n  const newHTML = tracks\n    .map(track => {\n      let htmlString = html.replace(\"%ID%\", track.id);\n      htmlString = htmlString.replace(\"%COVER%\", track.albumCover);\n      htmlString = htmlString.replace(\"%TRACK%\", track.track);\n      htmlString = htmlString.replace(\"%ARTIST%\", track.artist);\n      return htmlString;\n    })\n    .join(\" \");\n\n  playlist.innerHTML = newHTML;\n};\n\nconst songHandler = e => {\n  const songCard = e.target.closest(\".card\");\n  songIndex = songCard.id * 1 - 1;\n  loadSong(tracks[songIndex]);\n  playSong();\n};\n\n// Update song details\nconst loadSong = song => {\n  artist.innerText = song.artist;\n  title.innerText = song.track;\n  audio.src = song.file;\n  cover.src = song.albumCover;\n};\n\n// Play song\nconst playSong = () => {\n  musicContainer.classList.add(\"play\");\n  playBtn.querySelector(\"i.fas\").classList.remove(\"fa-play\");\n  playBtn.querySelector(\"i.fas\").classList.add(\"fa-pause\");\n\n  audio.play();\n};\n\n// Pause song\nconst pauseSong = () => {\n  musicContainer.classList.remove(\"play\");\n  playBtn.querySelector(\"i.fas\").classList.add(\"fa-play\");\n  playBtn.querySelector(\"i.fas\").classList.remove(\"fa-pause\");\n\n  audio.pause();\n};\n\n// Previous song\nconst prevSong = () => {\n  songIndex--;\n\n  if (songIndex < 0) {\n    songIndex = tracks.length - 1;\n  }\n\n  loadSong(tracks[songIndex]);\n\n  playSong();\n};\n\nconst shuffle = () => {\n  songIndex = Math.floor(Math.random() * tracks.length);\n  loadSong(tracks[songIndex]);\n  playSong();\n};\n\n// Next song\nconst nextSong = () => {\n  songIndex++;\n\n  if (songIndex > tracks.length - 1) {\n    songIndex = 0;\n  }\n\n  loadSong(tracks[songIndex]);\n\n  playSong();\n};\n\n// Update progress bar\nconst updateProgress = e => {\n  const { duration, currentTime } = e.srcElement;\n  const progressPercent = (currentTime / duration) * 100;\n  progress.style.width = `${progressPercent}%`;\n};\n\n// Set progress bar\nconst setProgress = e => {\n  const width = e.target.clientWidth;\n  const clickX = e.offsetX;\n  const duration = audio.duration;\n\n  audio.currentTime = (clickX / width) * duration;\n};\n\n(async () => {\n  try {\n    tracks = await getTracks();\n    tracks = tracks.splice(0, tracks.length - 1);\n\n    // Initially load song details into DOM\n    loadSong(tracks[songIndex]);\n\n    if (playlist) {\n      loadPlaylist(tracks);\n    }\n    prevBtn.addEventListener(\"click\", prevSong);\n    nextBtn.addEventListener(\"click\", nextSong);\n    shuffleBtn.addEventListener(\"click\", shuffle);\n    playBtn.addEventListener(\"click\", () => {\n      const isPlaying = musicContainer.classList.contains(\"play\");\n\n      if (isPlaying) {\n        pauseSong();\n      } else {\n        playSong();\n      }\n    });\n\n    // Time/song update\n    audio.addEventListener(\"timeupdate\", updateProgress);\n\n    // Click on progress bar\n    progressContainer.addEventListener(\"click\", setProgress);\n\n    // Song ends\n    audio.addEventListener(\"ended\", nextSong);\n    playlist.addEventListener(\"click\", songHandler);\n  } catch (err) {\n    console.log(err);\n  }\n})();\n"]}